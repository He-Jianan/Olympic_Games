<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.ufl.cise.dbms.group6.olympic_games.dao.MedalMapper">
  <resultMap id="BaseResultMap" type="edu.ufl.cise.dbms.group6.olympic_games.pojo.Medal">
    <id column="ID" jdbcType="NUMERIC" property="id" />
    <result column="EVENT_ID" jdbcType="NUMERIC" property="eventId" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="MEDAL_TYPE" jdbcType="VARCHAR" property="medalType" />
    <result column="ATHLETE_ID" jdbcType="NUMERIC" property="athleteId" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, EVENT_ID, STATUS, MEDAL_TYPE, ATHLETE_ID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from MEDAL
    where ID = #{id,jdbcType=NUMERIC}
  </select>


  <select id="queryStrippedMedal" resultType="edu.ufl.cise.dbms.group6.olympic_games.vo.StrippedVo">
    select a.year,a.season,a.name as country,a.stripped/b.normal as ratio
    from
      (select country.name,nationality.year,olympic_games.season,count(medal.athlete_id) as stripped
       from medal,athlete_event,nationality,country,olympic_games
       where medal.athlete_id=athlete_event.athlete_id
         and country.code=nationality.country
         and medal.year=athlete_event.year
         and olympic_games.year=medal.year
         and medal.event_id=athlete_event.event_id
         and nationality.year=athlete_event.year
         and nationality.athlete_id=medal.athlete_id
         and medal.status='Stripped'
       group by country.name,nationality.year,olympic_games.season)a,
      (select country.name,nationality.year,olympic_games.season,count(medal.athlete_id) as normal
       from medal,athlete_event,nationality,country,olympic_games
       where medal.athlete_id=athlete_event.athlete_id
         and country.code=nationality.country
         and medal.year=athlete_event.year
         and olympic_games.year=medal.year
         and medal.event_id=athlete_event.event_id
         and nationality.year=athlete_event.year
         and nationality.athlete_id=medal.athlete_id
         and medal.status='Normal'
       group by country.name,nationality.year,olympic_games.season)b
    where a.name=b.name
    <if test="country != null">
      and a.name = #{country,jdbcType=VARCHAR}
    </if>
      and a.year=b.year
      and a.season=b.season
      and a.season= #{season,jdbcType=VARCHAR}
    order by a.year
  </select>


  <select id="queryStrippedCountry" resultType="edu.ufl.cise.dbms.group6.olympic_games.vo.StrippedCountryVo">
    select nationality.year,olympic_games.season,count(distinct country.name) as stripped
    from medal,athlete_event,nationality,country,olympic_games
    where medal.athlete_id=athlete_event.athlete_id
      and country.code=nationality.country
      and medal.year=athlete_event.year
      and olympic_games.year=medal.year
      and medal.event_id=athlete_event.event_id
      and nationality.year=athlete_event.year
      and nationality.athlete_id=medal.athlete_id
      and medal.status='Stripped'
      AND OLYMPIC_GAMES.SEASON = #{season, jdbcType = VARCHAR}
    group by nationality.year,olympic_games.season
    ORDER BY YEAR ASC
  </select>


  <select id="queryStrippedEvent" resultType="edu.ufl.cise.dbms.group6.olympic_games.vo.StrippedEventVo">
    select year,season,num,event as strippedEvent
    from
      (
        select a.*, 'Athletics' as event
        from
          (select medal.year,olympic_games.season,count(*) as num
           from medal,athlete_event,olympic_games,event
           where medal.athlete_id=athlete_event.athlete_id
             and medal.year=athlete_event.year
             and olympic_games.year=medal.year
             and medal.event_id=athlete_event.event_id
             and event.id=athlete_event.event_id
             and medal.status='Stripped'
             and event.name like '%Athletics%'
           group by medal.year,olympic_games.season
           order by medal.year) a

        union
        select a.*, 'Pentathlon' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as num
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Pentathlon%'
            group by medal.year,olympic_games.season)a

        union
        select a.*, 'Biathlon' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Biathlon
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Biathlon%'
            group by medal.year,olympic_games.season)a


        union
        select a.*, 'Bobsleigh' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Bobsleigh
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Bobsleigh%'
            group by medal.year,olympic_games.season)a

        union
        select a.*, 'Equestrianism' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Equestrianism
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Equestrianism%'
            group by medal.year,olympic_games.season)a

        union
        select a.*, 'Boxing' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Boxing
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Boxing%'
            group by medal.year,olympic_games.season)a


        union
        select a.*, 'Shooting' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Shooting
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Shooting%'
            group by medal.year,olympic_games.season)a


        union
        select a.*, 'Swimming' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Swimming
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Swimming%'
            group by medal.year,olympic_games.season)a


        union
        select a.*, 'Canoeing' as event
        from
          (

            select medal.year,olympic_games.season,count(*) as Canoeing
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Canoeing%'
            group by medal.year,olympic_games.season)a

        union
        select a.*, 'Judo' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Judo
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Judo%'
            group by medal.year,olympic_games.season)a

        union
        select a.*, 'Rowing' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Rowing
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Rowing%'
            group by medal.year,olympic_games.season)a

        union
        select a.*, 'Cycling' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Cycling
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Cycling%'
            group by medal.year,olympic_games.season)a

        union
        select a.*, 'Gymnastics' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Gymnastics
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Gymnastics%'
            group by medal.year,olympic_games.season)a

        union
        select a.*, 'Skiing' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Skiing
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Skiing%'
            group by medal.year,olympic_games.season)a

        union
        select a.*, 'Weightlifting' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Weightlifting
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Weightlifting%'
            group by medal.year,olympic_games.season)a


        union
        select a.*, 'Wrestling' as event
        from
          (
            select medal.year,olympic_games.season,count(*) as Wrestling
            from medal,athlete_event,olympic_games,event
            where medal.athlete_id=athlete_event.athlete_id
              and medal.year=athlete_event.year
              and olympic_games.year=medal.year
              and medal.event_id=athlete_event.event_id
              and event.id=athlete_event.event_id
              and medal.status='Stripped'
              and event.name like '%Wrestling%'
            group by medal.year,olympic_games.season)a）
        where season=#{season,jdbcType=VARCHAR}
        <if test="eventName != null">
          and event=#{eventName,jdbcType=VARCHAR}
        </if>
        order by year asc
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    delete from MEDAL
    where ID = #{id,jdbcType=NUMERIC}
  </delete>
  <insert id="insert" parameterType="edu.ufl.cise.dbms.group6.olympic_games.pojo.Medal">
    insert into MEDAL (ID, EVENT_ID, STATUS, 
      MEDAL_TYPE, ATHLETE_ID)
    values (#{id,jdbcType=NUMERIC}, #{eventId,jdbcType=NUMERIC}, #{status,jdbcType=VARCHAR}, 
      #{medalType,jdbcType=VARCHAR}, #{athleteId,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="edu.ufl.cise.dbms.group6.olympic_games.pojo.Medal">
    insert into MEDAL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="eventId != null">
        EVENT_ID,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="medalType != null">
        MEDAL_TYPE,
      </if>
      <if test="athleteId != null">
        ATHLETE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=NUMERIC},
      </if>
      <if test="eventId != null">
        #{eventId,jdbcType=NUMERIC},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="medalType != null">
        #{medalType,jdbcType=VARCHAR},
      </if>
      <if test="athleteId != null">
        #{athleteId,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.ufl.cise.dbms.group6.olympic_games.pojo.Medal">
    update MEDAL
    <set>
      <if test="eventId != null">
        EVENT_ID = #{eventId,jdbcType=NUMERIC},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="medalType != null">
        MEDAL_TYPE = #{medalType,jdbcType=VARCHAR},
      </if>
      <if test="athleteId != null">
        ATHLETE_ID = #{athleteId,jdbcType=NUMERIC},
      </if>
    </set>
    where ID = #{id,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.ufl.cise.dbms.group6.olympic_games.pojo.Medal">
    update MEDAL
    set EVENT_ID = #{eventId,jdbcType=NUMERIC},
      STATUS = #{status,jdbcType=VARCHAR},
      MEDAL_TYPE = #{medalType,jdbcType=VARCHAR},
      ATHLETE_ID = #{athleteId,jdbcType=NUMERIC}
    where ID = #{id,jdbcType=NUMERIC}
  </update>
</mapper>